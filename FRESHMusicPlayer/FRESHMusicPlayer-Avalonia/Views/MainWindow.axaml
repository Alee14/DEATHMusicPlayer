<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:FRESHMusicPlayer.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:resx ="clr-namespace:FRESHMusicPlayer.Properties"
		xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia"
        mc:Ignorable="d"
		Width="800" Height="540"
        x:Class="FRESHMusicPlayer.Views.MainWindow"
		DragDrop.AllowDrop="True"
        Icon="/Assets/icon.ico" Closing="OnClosing" PointerWheelChanged="OnPointerWheelChanged" KeyDown="OnKeyDown"
        Title="{Binding WindowTitle}"
		>

	<Window.Resources>
		<svg:SvgImage x:Key="Pause" Source="/Assets/pause.svg"/>
		<svg:SvgImage x:Key="Play" Source="/Assets/play.svg"/>
		<svg:SvgImage x:Key="RepeatNone" Source="/Assets/repeatNone.svg"/>
		<svg:SvgImage x:Key="RepeatOne" Source="/Assets/repeatOne.svg"/>
		<svg:SvgImage x:Key="RepeatQueue" Source="/Assets/repeatQueue.svg"/>
		<svg:SvgImage x:Key="ShuffleFalse" Source="/Assets/shuffleFalse.svg"/>
		<svg:SvgImage x:Key="ShuffleTrue" Source="/Assets/shuffleTrue.svg"/>
		<svg:SvgImage x:Key="SkipNext" Source="/Assets/skipNext.svg"/>
		<svg:SvgImage x:Key="SkipPrevious" Source="/Assets/skipPrevious.svg"/>
		<svg:SvgImage x:Key="Enqueue" Source="/Assets/enqueue.svg"/>
		<svg:SvgImage x:Key="Delete" Source="/Assets/delete.svg"/>
		<svg:SvgImage x:Key="Settings" Source="/Assets/settings.svg"/>
		<svg:SvgImage x:Key="Queue" Source="/Assets/queue.svg"/>
		<svg:SvgImage x:Key="Notification" Source="/Assets/notification.svg"/>
		<svg:SvgImage x:Key="Search" Source="/Assets/search.svg"/>
		<ContextMenu x:Key="OverflowMenu">
			<MenuItem Command="{Binding OpenTagEditorCommand}" Header="{x:Static resx:Resources.TagEditor}"/>
			<MenuItem Command="{Binding OpenPlaylistManagementCommand}" Header="{x:Static resx:Resources.PlaylistManagement}"/>
			<MenuItem Command="{Binding OpenTrackCommand}" Header="{x:Static resx:Resources.OpenDialog}"/>
			<MenuItem Header="{x:Static resx:Resources.Menu_GoTo}">
				<MenuItem Command="{Binding GoToArtistCommand}" Header="{x:Static resx:Resources.Artist}"/>
				<MenuItem Command="{Binding GoToAlbumCommand}" Header="{x:Static resx:Resources.Album}"/>
			</MenuItem>
			<MenuItem Command="{Binding OpenLyricsCommand}" Header="{x:Static resx:Resources.Lyrics}"/>
			<Separator/>
			<MenuItem Command="{Binding MiniPlayerCommand}" Header="{x:Static resx:Resources.MiniPlayer}"/>
			<MenuItem Command="{Binding PauseAfterCurrentTrackCommand}" Header="{x:Static resx:Resources.Menu_Playback_PauseAfterCurrentTrack}"/>
		</ContextMenu>
		<vm:PauseAfterCurrentTrackToBrushConverter x:Key="PauseAfterCurrentTrackToBrushConverter"/>
		<vm:TotalTimeDisplayConverter x:Key="TotalTimeDisplayConverter"/>
	</Window.Resources>
	<Window.Styles>
		<Style Selector="ListBoxItem">
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		</Style>
		<Style Selector="StackPanel">
			<Setter Property="Spacing" Value="3"/>
		</Style>
	</Window.Styles>

	<Design.DataContext>
		<vm:MainWindowViewModel/>
	</Design.DataContext>

	<NativeMenu.Menu>
		<NativeMenu>
			<NativeMenuItem Header="{x:Static resx:Resources.Menu_File}">
				<NativeMenu>
					<NativeMenuItem Header="{x:Static resx:Resources.OpenDialog}" Command="{Binding OpenTrackCommand}"/>
					<NativeMenuItemSeperator/>
					<NativeMenuItem Header="{x:Static resx:Resources.ImportTracks}" Command="{Binding BrowseTracksCommand}"/>
					<NativeMenuItem Header="{x:Static resx:Resources.ImportFolders}" Command="{Binding BrowseFoldersCommand}"/>
					<NativeMenuItem Header="{x:Static resx:Resources.ImportPlaylistFiles}" Command="{Binding BrowsePlaylistFilesCommand}"/>
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="{x:Static resx:Resources.Menu_Playback}">
				<NativeMenu>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Playback_PlayPause}" Command="{Binding PlayPauseCommand}"/>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Playback_Previous}" Command="{Binding SkipPreviousCommand}"/>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Playback_Next}" Command="{Binding SkipNextCommand}"/>
					<NativeMenuItemSeperator/>
					<NativeMenuItem Header="Toggle Repeat" Command="{Binding RepeatCommand}"/>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Playback_Shuffle}" Command="{Binding ShuffleCommand}" IsChecked="{Binding Shuffle}"/>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Playback_PauseAfterCurrentTrack}" Command="{Binding PauseAfterCurrentTrackCommand}"/>
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="{x:Static resx:Resources.Menu_About}">
				<NativeMenu>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_About_AboutFMP}" Command="{Binding AboutFMPCommand}"/>
				</NativeMenu>
			</NativeMenuItem>
		</NativeMenu>
	</NativeMenu.Menu>
	<Panel x:Name="RootPanel" DragDrop.AllowDrop="True">
		<StackPanel Background="Transparent" Orientation="Horizontal" ZIndex="1" Height="35" Margin="0,0,10,0" VerticalAlignment="Top" HorizontalAlignment="Right">
			<Button x:Name="SearchButton" Margin="0,5" Click="OnSearchButtonClick">
				<Button.ContextFlyout>
					<Flyout ShowMode="Standard" Closed="OnSearchClosed">
						<DockPanel Width="300" Height="500">
							<TextBox DockPanel.Dock="Top" Text="{Binding SearchTerm}" Watermark="Type here to search!"/>
							<ListBox Items="{Binding SearchTracks}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="AlwaysSelected" VirtualizationMode="Simple">
								<ListBox.ItemTemplate>
									<DataTemplate>
										<Grid Margin="-5" Height="25" Background="Transparent">
											<Grid.RowDefinitions>
												<RowDefinition Height="Auto"/>
												<RowDefinition Height="Auto"/>
											</Grid.RowDefinitions>
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="1*"/>
												<ColumnDefinition Width="Auto"/>
											</Grid.ColumnDefinitions>
											<TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Title}" HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" FontSize="15" FontWeight="Bold"/>
											<TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Artist}" FontSize="10"/>
											<StackPanel Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Center"  Height="38" Margin="0,-27,0,-30" Orientation="Horizontal">
												<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnPlayButtonClick" VerticalAlignment="Center">
													<Image Source="{DynamicResource Play}"/>
												</Button>
												<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnEnqueueButtonClick" VerticalAlignment="Center">
													<Image Source="{DynamicResource Enqueue}"/>
												</Button>
												<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnDeleteButtonClick" VerticalAlignment="Center">
													<Image Source="{DynamicResource Delete}"/>
												</Button>
											</StackPanel>
										</Grid>
									</DataTemplate>
								</ListBox.ItemTemplate>
							</ListBox>
						</DockPanel>
					</Flyout>

				</Button.ContextFlyout>
				<Image Source="{DynamicResource Search}"/>
			</Button>
			<Button x:Name="NotificationButton" Click="OnShowNotificationButtonClick" Margin="0,5" IsVisible="{Binding AreThereAnyNotifications}">
				<Button.ContextFlyout>
					<Flyout ShowMode="Transient">
						<DockPanel>
							<DockPanel DockPanel.Dock="Top" LastChildFill="False" Margin="0,0,0,10">
								<TextBlock DockPanel.Dock="Left" Text="Notifications" FontSize="16" VerticalAlignment="Center" FontWeight="Bold"/>
								<Button DockPanel.Dock="Right" Content="Clear All" VerticalAlignment="Center" Command="{Binding ClearAllNotificationsCommand}"/>
							</DockPanel>
							<ListBox Items="{Binding VisibleNotifications}" MinWidth="300" MaxWidth="300">
								<ListBox.DataTemplates>
									<DataTemplate>
										<StackPanel Background="Transparent" PointerPressed="OnNotificationClick">
											<TextBlock Text="{Binding ContentText}" TextWrapping="Wrap"/>
											<Button Click="OnNotificationButtonClick" HorizontalAlignment="Center" IsVisible="{Binding ShouldButtonBeVisible}">
												<Button.Content>
													<TextBlock Text="{Binding ButtonText}"/>
												</Button.Content>
											</Button>
										</StackPanel>
									</DataTemplate>
								</ListBox.DataTemplates>
							</ListBox>
						</DockPanel>
					</Flyout>
				</Button.ContextFlyout>
				<Image Source="{DynamicResource Notification}"/>
			</Button>
			<Button Margin="0,5" Command="{Binding OpenQueueManagementCommand}" ToolTip.Tip="{x:Static resx:Resources.QueueManagement}">
				<Image Source="{DynamicResource Queue}"/>
			</Button>
			<Button Margin="0,5" Command="{Binding OpenSettingsCommand}" ToolTip.Tip="{x:Static resx:Resources.Settings}">
				<Image Source="{DynamicResource Settings}"/>
			</Button>
		</StackPanel>
		<DockPanel LastChildFill="True" ZIndex="0">
			<Grid Background="{StaticResource ForegroundColor}" DockPanel.Dock="Bottom" Height="85" Margin="0,10,0,0">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="1*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<Image Source="{Binding CoverArt}" Grid.Column="0" Margin="10,-10,5,0" MaxWidth="64" MaxHeight="64" VerticalAlignment="Center" ToolTip.ShowDelay="10" PointerPressed="OpenTrackInfo" ContextMenu="{DynamicResource OverflowMenu}">
					<ToolTip.Tip>
						<Image Source="{Binding CoverArt}"/>
					</ToolTip.Tip>
				</Image>
				<!--Middle Section-->
				<Grid Grid.Column="1" Margin="5,8,0,0" >
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<TextBlock x:Name="TrackTitleTextBlock" Grid.Row="0" Text="{Binding Title}" TextTrimming="CharacterEllipsis" FontSize="21" FontWeight="Bold" PointerPressed="OpenTrackInfo" ContextMenu="{DynamicResource OverflowMenu}"/>
					<TextBlock x:Name="TrackArtistTextBlock" Grid.Row="1" Text="{Binding Artist}" FontSize="12" Foreground="{StaticResource SecondaryTextColor}"/>
					<Grid Grid.Row="2" Margin="0,5,0,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<TextBlock x:Name="ProgressIndicator1" Text="{Binding CurrentTime, StringFormat=\{0:mm\\:ss\}}" Foreground="{StaticResource SecondaryTextColor}" Grid.Column="0" FontSize="12" Margin="0,0,2,0"/>
						<Slider x:Name="ProgressSlider" Height="50" Grid.Column="1" Value="{Binding CurrentTimeSeconds}" Maximum="{Binding TotalTimeSeconds}" Margin="0,-13,0,0"/>
						<TextBlock x:Name="ProgressIndicator2" Foreground="{Binding PauseAfterCurrentTrack, Converter={StaticResource PauseAfterCurrentTrackToBrushConverter}}" Grid.Column="2" FontSize="12" Margin="2,0,0,0" PointerPressed="ToggleShowRemainingProgress">
							<TextBlock.Text>
								<MultiBinding Converter="{StaticResource TotalTimeDisplayConverter}">
									<Binding Path="CurrentTime"/>
									<Binding Path="TotalTime"/>
								</MultiBinding>
							</TextBlock.Text>
						</TextBlock>
					</Grid>
				</Grid>
				<!--Right Section-->
				<Grid Grid.Column="3" Margin="0,0,0,5">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<Slider x:Name="VolumeSlider" Grid.Row="1" Maximum="1" Value="{Binding Volume}" Margin="10,0,10,-5"/>
					<StackPanel Grid.Row="2" VerticalAlignment="Center" Orientation="Horizontal" Margin="10,0">
						<Button x:Name="PreviousTrackButton" Command="{Binding SkipPreviousCommand}">
							<Image Source="{DynamicResource SkipPrevious}"/>
						</Button>
						<Button x:Name="ShuffleButton" Command="{Binding ShuffleCommand}">
							<Panel>
								<Image Source="{DynamicResource ShuffleFalse}" IsVisible="{Binding !Shuffle}"/>
								<Image Source="{DynamicResource ShuffleTrue}" IsVisible="{Binding Shuffle}"/>
							</Panel>
						</Button>
						<Button x:Name="PlayPauseButton" Command="{Binding PlayPauseCommand}">
							<Panel>
								<Image Source="{DynamicResource Play}" IsVisible="{Binding Paused}"/>
								<Image Source="{DynamicResource Pause}" IsVisible="{Binding !Paused}"/>
							</Panel>
						</Button>
						<Button x:Name="RepeatOneButton" Command="{Binding RepeatCommand}">
							<Panel>
								<Image Source="{DynamicResource RepeatNone}" IsVisible="{Binding RepeatModeNone}"/>
								<Image Source="{DynamicResource RepeatQueue}" IsVisible="{Binding RepeatModeAll}"/>
								<Image Source="{DynamicResource RepeatOne}" IsVisible="{Binding RepeatModeOne}"/>
							</Panel>
						</Button>
						<Button x:Name="NextTrackButton" Command="{Binding SkipNextCommand}">
							<Image Source="{DynamicResource SkipNext}"/>
						</Button>
					</StackPanel>
				</Grid>
			</Grid>



			<TabControl DockPanel.Dock="Top" SelectedIndex="{Binding SelectedTab}">
				<TabItem Header="{x:Static resx:Resources.Tracks}">
					<DockPanel>
						<DockPanel DockPanel.Dock="Bottom" Margin="0,5,0,0" LastChildFill="False">
							<TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Text="{Binding LibraryInfoText}"/>
							<Button DockPanel.Dock="Right" Command="{Binding PlayAllCommand}" Content="{x:Static resx:Resources.Library_PlayAll}"/>
							<Button DockPanel.Dock="Right" Command="{Binding EnqueueAllCommand}" Content="{x:Static resx:Resources.Library_EnqueueAll}"/>
						</DockPanel>
						<ListBox Items="{Binding AllTracks}" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="AlwaysSelected" VirtualizationMode="Simple">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<Grid Margin="-5" Height="25" Background="Transparent">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="1*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Title}" HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" FontSize="15" FontWeight="Bold"/>
										<TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Artist}" FontSize="10"/>
										<StackPanel Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Center"  Height="38" Margin="0,-27,0,-30" Orientation="Horizontal">
											<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnPlayButtonClick" VerticalAlignment="Center">
												<Image Source="{DynamicResource Play}"/>
											</Button>
											<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnEnqueueButtonClick" VerticalAlignment="Center">
												<Image Source="{DynamicResource Enqueue}"/>
											</Button>
											<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnDeleteButtonClick" VerticalAlignment="Center">
												<Image Source="{DynamicResource Delete}"/>
											</Button>
										</StackPanel>
									</Grid>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
					</DockPanel>
				</TabItem>
				<TabItem Header="{x:Static resx:Resources.Artists}" >
					<DockPanel>
						<ListBox DockPanel.Dock="Left" Items="{Binding CategoryThings}" Width="222" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="Single" SelectedItem="{Binding ArtistsSelectedItem}" VirtualizationMode="Simple">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<StackPanel Margin="-5">
										<TextBlock Margin="-5" Text="{Binding}"/>
									</StackPanel>

								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
						<DockPanel DockPanel.Dock="Bottom" Margin="10,5,0,0" LastChildFill="False">
							<TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Text="{Binding LibraryInfoText}"/>
							<Button DockPanel.Dock="Right" Command="{Binding PlayAllCommand}" Content="{x:Static resx:Resources.Library_PlayAll}"/>
							<Button DockPanel.Dock="Right" Command="{Binding EnqueueAllCommand}" Content="{x:Static resx:Resources.Library_EnqueueAll}"/>
						</DockPanel>
						<ListBox Items="{Binding AllTracks}" Margin="10,0,0,0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="AlwaysSelected" VirtualizationMode="Simple">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<Grid Margin="-5" Height="25" Background="Transparent">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="1*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Title}" HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" FontSize="15" FontWeight="Bold"/>
										<TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Artist}" FontSize="10"/>
										<StackPanel Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Center"  Height="38" Margin="0,-27,0,-30" Orientation="Horizontal">
											<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnPlayButtonClick" VerticalAlignment="Center">
												<Image Source="{DynamicResource Play}"/>
											</Button>
											<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnEnqueueButtonClick" VerticalAlignment="Center">
												<Image Source="{DynamicResource Enqueue}"/>
											</Button>
											<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnDeleteButtonClick" VerticalAlignment="Center">
												<Image Source="{DynamicResource Delete}"/>
											</Button>
										</StackPanel>
									</Grid>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
					</DockPanel>
				</TabItem>
				<TabItem Header="{x:Static resx:Resources.Albums}" >
					<DockPanel>
						<ListBox DockPanel.Dock="Left" Items="{Binding CategoryThings}" Width="222" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="Single" SelectedItem="{Binding AlbumsSelectedItem}" VirtualizationMode="Simple">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<StackPanel Margin="-5">
										<TextBlock Margin="-5" Text="{Binding}"/>
									</StackPanel>

								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
						<DockPanel DockPanel.Dock="Bottom" Margin="10,5,0,0" LastChildFill="False">
							<TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Text="{Binding LibraryInfoText}"/>
							<Button DockPanel.Dock="Right" Command="{Binding PlayAllCommand}" Content="{x:Static resx:Resources.Library_PlayAll}"/>
							<Button DockPanel.Dock="Right" Command="{Binding EnqueueAllCommand}" Content="{x:Static resx:Resources.Library_EnqueueAll}"/>
						</DockPanel>
						<ListBox Items="{Binding AllTracks}" Margin="10,0,0,0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="AlwaysSelected" VirtualizationMode="Simple">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<Grid Margin="-5" Height="25" Background="Transparent">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="1*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Title}" HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" FontSize="15" FontWeight="Bold"/>
										<TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Artist}" FontSize="10"/>
										<StackPanel Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Center"  Height="38" Margin="0,-27,0,-30" Orientation="Horizontal">
											<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnPlayButtonClick" VerticalAlignment="Center">
												<Image Source="{DynamicResource Play}"/>
											</Button>
											<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnEnqueueButtonClick" VerticalAlignment="Center">
												<Image Source="{DynamicResource Enqueue}"/>
											</Button>
											<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnDeleteButtonClick" VerticalAlignment="Center">
												<Image Source="{DynamicResource Delete}"/>
											</Button>
										</StackPanel>
									</Grid>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
					</DockPanel>
				</TabItem>
				<TabItem Header="{x:Static resx:Resources.Playlists}" >
					<DockPanel>
						<ListBox DockPanel.Dock="Left" Items="{Binding CategoryThings}" Width="222" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="Single" SelectedItem="{Binding PlaylistsSelectedItem}" VirtualizationMode="Simple">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<StackPanel Margin="-5">
										<TextBlock Margin="-5" Text="{Binding}"/>
									</StackPanel>

								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
						<DockPanel DockPanel.Dock="Bottom" Margin="10,5,0,0" LastChildFill="False">
							<TextBlock DockPanel.Dock="Left" VerticalAlignment="Center" Text="{Binding LibraryInfoText}"/>
							<Button DockPanel.Dock="Right" Command="{Binding PlayAllCommand}" Content="{x:Static resx:Resources.Library_PlayAll}"/>
							<Button DockPanel.Dock="Right" Command="{Binding EnqueueAllCommand}" Content="{x:Static resx:Resources.Library_EnqueueAll}"/>
						</DockPanel>
						<ListBox Items="{Binding AllTracks}" Margin="10,0,0,0" ScrollViewer.HorizontalScrollBarVisibility="Disabled" SelectionMode="AlwaysSelected" VirtualizationMode="Simple">
							<ListBox.ItemTemplate>
								<DataTemplate>
									<Grid Margin="-5" Height="25" Background="Transparent">
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto"/>
											<RowDefinition Height="Auto"/>
										</Grid.RowDefinitions>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="1*"/>
											<ColumnDefinition Width="Auto"/>
										</Grid.ColumnDefinitions>
										<TextBlock Grid.Column="0" Grid.Row="0" Text="{Binding Title}" HorizontalAlignment="Stretch" TextTrimming="CharacterEllipsis" FontSize="15" FontWeight="Bold"/>
										<TextBlock Grid.Column="0" Grid.Row="1" Text="{Binding Artist}" FontSize="10"/>
										<StackPanel Grid.Column="1" Grid.RowSpan="2" VerticalAlignment="Center"  Height="38" Margin="0,-27,0,-30" Orientation="Horizontal">
											<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnPlayButtonClick" VerticalAlignment="Center">
												<Image Source="{DynamicResource Play}"/>
											</Button>
											<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnEnqueueButtonClick" VerticalAlignment="Center">
												<Image Source="{DynamicResource Enqueue}"/>
											</Button>
											<Button IsVisible="{Binding $parent[1].IsPointerOver}" Click="OnDeleteButtonClick" VerticalAlignment="Center">
												<Image Source="{DynamicResource Delete}"/>
											</Button>
										</StackPanel>
									</Grid>
								</DataTemplate>
							</ListBox.ItemTemplate>
						</ListBox>
					</DockPanel>
				</TabItem>
				<TabItem Header="{x:Static resx:Resources.Import}">
					<StackPanel>
						<Button Command="{Binding BrowseTracksCommand}" Content="{x:Static resx:Resources.ImportTracks}"/>
						<Button Command="{Binding BrowsePlaylistFilesCommand}" Content="{x:Static resx:Resources.ImportPlaylistFiles}"/>
						<Button Command="{Binding BrowseFoldersCommand}" Content="{x:Static resx:Resources.ImportFolders}"/>
						<StackPanel Orientation="Horizontal">
							<TextBox Text="{Binding FilePathOrURL}" Watermark="{x:Static resx:Resources.FilePathOrUrl}"/>
							<Button Command="{Binding ImportFilePathCommand}" Content="{x:Static resx:Resources.Import}"/>
						</StackPanel>
						<TextBlock Text="{x:Static resx:Resources.Import_DragDropHint}"/>
					</StackPanel>
				</TabItem>
				<!--<TabItem Header="Native Menubar Debug">
					<NativeMenuBar/>
				</TabItem>-->
			</TabControl>
		</DockPanel>

	</Panel>

</Window>
