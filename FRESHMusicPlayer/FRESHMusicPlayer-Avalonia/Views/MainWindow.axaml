<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:FRESHMusicPlayer.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:resx ="clr-namespace:FRESHMusicPlayer.Properties"
		xmlns:svg="clr-namespace:Avalonia.Svg.Skia;assembly=Avalonia.Svg.Skia"
        mc:Ignorable="d"
		Width="800" Height="540"
        x:Class="FRESHMusicPlayer.Views.MainWindow"
		DragDrop.AllowDrop="True"
        Icon="/Assets/icon.ico" Closing="OnClosing" PointerWheelChanged="OnPointerWheelChanged" KeyDown="OnKeyDown" Initialized="OnInitialized"
        Title="{Binding WindowTitle}"
		>

	<Window.Resources>
		<svg:SvgImage x:Key="Pause" Source="/Assets/pause.svg"/>
		<svg:SvgImage x:Key="Play" Source="/Assets/play.svg"/>
		<svg:SvgImage x:Key="RepeatNone" Source="/Assets/repeatNone.svg"/>
		<svg:SvgImage x:Key="RepeatOne" Source="/Assets/repeatOne.svg"/>
		<svg:SvgImage x:Key="RepeatQueue" Source="/Assets/repeatQueue.svg"/>
		<svg:SvgImage x:Key="ShuffleFalse" Source="/Assets/shuffleFalse.svg"/>
		<svg:SvgImage x:Key="ShuffleTrue" Source="/Assets/shuffleTrue.svg"/>
		<svg:SvgImage x:Key="SkipNext" Source="/Assets/skipNext.svg"/>
		<svg:SvgImage x:Key="SkipPrevious" Source="/Assets/skipPrevious.svg"/>
		<svg:SvgImage x:Key="Settings" Source="/Assets/settings.svg"/>
		<svg:SvgImage x:Key="Queue" Source="/Assets/queue.svg"/>
		<svg:SvgImage x:Key="Notification" Source="/Assets/notification.svg"/>
		<svg:SvgImage x:Key="Search" Source="/Assets/search.svg"/>
		<svg:SvgImage x:Key="Volume" Source="/Assets/volume.svg"/>
		<ContextMenu x:Key="OverflowMenu">
			<MenuItem Command="{Binding OpenTagEditorCommand}" Header="{x:Static resx:Resources.TagEditor}"/>
			<MenuItem Command="{Binding OpenPlaylistManagementCommand}" Header="{x:Static resx:Resources.PlaylistManagement}"/>
			<MenuItem Command="{Binding OpenTrackCommand}" Header="{x:Static resx:Resources.OpenDialog}"/>
			<MenuItem Header="{x:Static resx:Resources.Menu_GoTo}">
				<MenuItem Command="{Binding GoToArtistCommand}" Header="{x:Static resx:Resources.Artist}"/>
				<MenuItem Command="{Binding GoToAlbumCommand}" Header="{x:Static resx:Resources.Album}"/>
			</MenuItem>
			<MenuItem Command="{Binding OpenLyricsCommand}" Header="{x:Static resx:Resources.Lyrics}"/>
			<Separator/>
			<!--<MenuItem Command="{Binding MiniPlayerCommand}" Header="{x:Static resx:Resources.MiniPlayer}"/>-->
			<MenuItem Command="{Binding PauseAfterCurrentTrackCommand}" Header="{x:Static resx:Resources.Menu_Playback_PauseAfterCurrentTrack}"/>
		</ContextMenu>
		<vm:PauseAfterCurrentTrackToBrushConverter x:Key="PauseAfterCurrentTrackToBrushConverter"/>
		<vm:TotalTimeDisplayConverter x:Key="TotalTimeDisplayConverter"/>
	</Window.Resources>
	<Window.Styles>

	</Window.Styles>

	<Design.DataContext>
		<vm:MainWindowViewModel/>
	</Design.DataContext>

	<NativeMenu.Menu>
		<NativeMenu>
			<NativeMenuItem Header="{x:Static resx:Resources.Menu_File}">
				<NativeMenu>
					<NativeMenuItem Header="{x:Static resx:Resources.OpenDialog}" Command="{Binding OpenTrackCommand}"/>
					<NativeMenuItemSeperator/>
					<NativeMenuItem Header="{x:Static resx:Resources.ImportTracks}" Command="{Binding BrowseTracksCommand}"/>
					<NativeMenuItem Header="{x:Static resx:Resources.ImportFolders}" Command="{Binding BrowseFoldersCommand}"/>
					<NativeMenuItem Header="{x:Static resx:Resources.ImportPlaylistFiles}" Command="{Binding BrowsePlaylistFilesCommand}"/>
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="{x:Static resx:Resources.Menu_Playback}">
				<NativeMenu>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Playback_PlayPause}" Command="{Binding PlayPauseCommand}"/>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Playback_Previous}" Command="{Binding SkipPreviousCommand}"/>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Playback_Next}" Command="{Binding SkipNextCommand}"/>
					<NativeMenuItemSeperator/>
					<NativeMenuItem Header="Toggle Repeat" Command="{Binding RepeatCommand}"/>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Playback_Shuffle}" Command="{Binding ShuffleCommand}" IsChecked="{Binding Shuffle}"/>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_Playback_PauseAfterCurrentTrack}" Command="{Binding PauseAfterCurrentTrackCommand}"/>
				</NativeMenu>
			</NativeMenuItem>
			<NativeMenuItem Header="{x:Static resx:Resources.Menu_About}">
				<NativeMenu>
					<NativeMenuItem Header="{x:Static resx:Resources.Menu_About_AboutFMP}" Command="{Binding AboutFMPCommand}"/>
				</NativeMenu>
			</NativeMenuItem>
		</NativeMenu>
	</NativeMenu.Menu>
	<Panel x:Name="RootPanel" DragDrop.AllowDrop="True" Opacity="1">
		<StackPanel Background="Transparent" Orientation="Horizontal" ZIndex="1" Height="35" Margin="0,0,10,0" VerticalAlignment="Top" HorizontalAlignment="Right">
			
		</StackPanel>
		<DockPanel ZIndex="0">
			<Grid Background="{DynamicResource ForegroundColor}" DockPanel.Dock="Bottom" Height="85">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="1*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<Image Source="{Binding CoverArt}" Grid.Column="0" Margin="10,-10,10,0" MaxWidth="64" MaxHeight="64" VerticalAlignment="Center" ToolTip.ShowDelay="10" PointerPressed="OpenTrackInfo" ContextMenu="{DynamicResource OverflowMenu}">
					<ToolTip.Tip>
						<Image Source="{Binding CoverArt}" Width="450" Height="450"/>
					</ToolTip.Tip>
				</Image>
				<!--Middle Section-->
				<Grid Grid.Column="1" Margin="0,8,0,0" >
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
					</Grid.RowDefinitions>
					<TextBlock x:Name="TrackTitleTextBlock" Grid.Row="0" Text="{Binding Title}" TextTrimming="CharacterEllipsis" FontSize="21" FontWeight="Bold" PointerPressed="OpenTrackInfo" ContextMenu="{DynamicResource OverflowMenu}"/>
					<TextBlock x:Name="TrackArtistTextBlock" Grid.Row="1" Text="{Binding Artist}" FontSize="12" Foreground="{DynamicResource SecondaryTextColor}"/>
					<Grid Grid.Row="2" Margin="0,5,0,0">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="1*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<TextBlock x:Name="ProgressIndicator1" Text="{Binding CurrentTime, StringFormat=\{0:mm\\:ss\}}" Foreground="{DynamicResource SecondaryTextColor}" Grid.Column="0" FontSize="12" Margin="0,0,2,0"/>
						<Slider x:Name="ProgressSlider" Height="50" Grid.Column="1" Value="{Binding CurrentTimeSeconds}" Maximum="{Binding TotalTimeSeconds}" Margin="0,-13,0,0"/>
						<TextBlock x:Name="ProgressIndicator2" Foreground="{Binding PauseAfterCurrentTrack, Converter={StaticResource PauseAfterCurrentTrackToBrushConverter}}" Grid.Column="2" FontSize="12" Margin="2,0,0,0" PointerPressed="ToggleShowRemainingProgress">
							<TextBlock.Text>
								<MultiBinding Converter="{StaticResource TotalTimeDisplayConverter}">
									<Binding Path="CurrentTime"/>
									<Binding Path="TotalTime"/>
								</MultiBinding>
							</TextBlock.Text>
						</TextBlock>
					</Grid>
				</Grid>
				<!--Right Section-->
				<Grid Grid.Column="3" Margin="0,0,0,5">
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
						<RowDefinition Height="Auto"/>
					</Grid.RowDefinitions>
					<Grid Grid.Row="1" Margin="10,0,10,-5">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="1*"/>
							<ColumnDefinition Width="Auto"/>
						</Grid.ColumnDefinitions>
						<Slider x:Name="VolumeSlider" Grid.Column="0" Maximum="1" Value="{Binding Volume}">
							<Slider.Transitions>
								<Transitions>
									<DoubleTransition Property="Opacity" Duration="0:0:0.25"/>
								</Transitions>
							</Slider.Transitions>
							<Slider.Styles>
								<Style Selector="Slider">
									<Setter Property="Opacity" Value="0"/>
								</Style>
								<Style Selector="Slider:pointerover">
									<Setter Property="Opacity" Value="1"/>
								</Style>
							</Slider.Styles>
						</Slider>
						<Image Grid.Column="1" Source="{DynamicResource Volume}"/>
					</Grid>

					<StackPanel Grid.Row="2" VerticalAlignment="Center" Orientation="Horizontal" Margin="10,0">
						<Button x:Name="PreviousTrackButton" Command="{Binding SkipPreviousCommand}">
							<Image Source="{DynamicResource SkipPrevious}"/>
						</Button>
						<Button x:Name="ShuffleButton" Command="{Binding ShuffleCommand}">
							<Panel>
								<Image Source="{DynamicResource ShuffleFalse}" IsVisible="{Binding !Shuffle}"/>
								<Image Source="{DynamicResource ShuffleTrue}" IsVisible="{Binding Shuffle}"/>
							</Panel>
						</Button>
						<Button x:Name="PlayPauseButton" Command="{Binding PlayPauseCommand}">
							<Panel>
								<Image Source="{DynamicResource Play}" IsVisible="{Binding Paused}"/>
								<Image Source="{DynamicResource Pause}" IsVisible="{Binding !Paused}"/>
							</Panel>
						</Button>
						<Button x:Name="RepeatOneButton" Command="{Binding RepeatCommand}">
							<Panel>
								<Image Source="{DynamicResource RepeatNone}" IsVisible="{Binding RepeatModeNone}"/>
								<Image Source="{DynamicResource RepeatQueue}" IsVisible="{Binding RepeatModeAll}"/>
								<Image Source="{DynamicResource RepeatOne}" IsVisible="{Binding RepeatModeOne}"/>
							</Panel>
						</Button>
						<Button x:Name="NextTrackButton" Command="{Binding SkipNextCommand}">
							<Image Source="{DynamicResource SkipNext}"/>
						</Button>
					</StackPanel>
				</Grid>
			</Grid>

			<DockPanel DockPanel.Dock="Top" Height="30" LastChildFill="False">
				<TextBlock x:Name="TracksHeader" Text="Tracks" FontSize="16" DockPanel.Dock="Left" VerticalAlignment="Center" Margin="10,0,15,0" Cursor="Hand" PointerPressed="OnTracksPressed" FontWeight="{Binding TracksTabWeight}"/>
				<TextBlock x:Name="ArtistsHeader" Text="Artists" FontSize="16" DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,15,0" Cursor="Hand" PointerPressed="OnArtistsPressed" FontWeight="{Binding ArtistsTabWeight}"/>
				<TextBlock x:Name="AlbumsHeader" Text="Albums" FontSize="16" DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,15,0" Cursor="Hand" PointerPressed="OnAlbumsPressed" FontWeight="{Binding AlbumsTabWeight}"/>
				<TextBlock x:Name="PlaylistsHeader" Text="Playlists" FontSize="16" DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,15,0" Cursor="Hand" PointerPressed="OnPlaylistsPressed" FontWeight="{Binding PlaylistsTabWeight}"/>
				<TextBlock x:Name="ImportHeader" Text="Import" FontSize="16" DockPanel.Dock="Left" VerticalAlignment="Center" Margin="0,0,15,0" Cursor="Hand" PointerPressed="OnImportPressed" FontWeight="{Binding ImportTabWeight}"/>

				<Button Command="{Binding OpenSettingsCommand}" Margin="0,2,5,2" DockPanel.Dock="Right" ToolTip.Tip="{x:Static resx:Resources.Settings}">
					<Image Source="{DynamicResource Settings}"/>
				</Button>
				<Button Command="{Binding OpenQueueManagementCommand}" Margin="0,2,5,2" DockPanel.Dock="Right" ToolTip.Tip="{x:Static resx:Resources.QueueManagement}">
					<Image Source="{DynamicResource Queue}"/>
				</Button>
				<Button Command="{Binding OpenSearchCommand}" DockPanel.Dock="Right" Margin="0,2,5,2" ToolTip.Tip="{x:Static resx:Resources.Search}">
					<Image Source="{DynamicResource Search}"/>
				</Button>
				<Button x:Name="NotificationButton" DockPanel.Dock="Right" Margin="10,2,5,2" Click="OnShowNotificationButtonClick" IsVisible="{Binding AreThereAnyNotifications}" ToolTip.Tip="{x:Static resx:Resources.Notifications}">
					<Image Source="{DynamicResource Notification}"/>
				</Button>
			</DockPanel>

			
			<ContentControl x:Name="AuxPane" DockPanel.Dock="{Binding AuxPaneDock}" Background="{DynamicResource SecondaryColor}" Content="{Binding AuxPaneContent}" Width="335" Margin="0, 0, -335, 0">
				<ContentControl.Styles>
					<Style Selector="ContentControl.opened">
						<Setter Property="DockPanel.Dock" Value="Right"/>
						<Style.Animations>
							<Animation Duration="0:0:0.1" FillMode="Forward" Easing="ExponentialEaseOut">
							<KeyFrame Cue="100%">
								<Setter Property="Margin" Value="0, 0, 0, 0"/>
							</KeyFrame>
						</Animation>
						</Style.Animations>
					</Style>
					<Style Selector="ContentControl.closed">
						<Style.Animations>
							<Animation Duration="0:0:0.1" FillMode="Forward" Easing="ExponentialEaseIn">
								<KeyFrame Cue="100%">
									<Setter Property="Margin" Value="0, 0, -335, 0"/>
								</KeyFrame>
							</Animation>
						</Style.Animations>
					</Style>
					<Style Selector="ContentControl.openedfromleft">
						<Setter Property="DockPanel.Dock" Value="Left"/>
						<Style.Animations>
							<Animation Duration="0:0:0.1" FillMode="Forward" Easing="ExponentialEaseOut">
								<KeyFrame Cue="100%">
									<Setter Property="Margin" Value="0, 0, 0, 0"/>
								</KeyFrame>
							</Animation>
						</Style.Animations>
					</Style>
					<Style Selector="ContentControl.closedfromleft">
						<Setter Property="DockPanel.Dock" Value="Left"/>
						<Style.Animations>
							<Animation Duration="0:0:0.1" FillMode="Forward" Easing="ExponentialEaseIn">
								<KeyFrame Cue="100%">
									<Setter Property="Margin" Value="-335, 0, 0, 0"/>
								</KeyFrame>
							</Animation>
						</Style.Animations>
					</Style>
				</ContentControl.Styles>
			</ContentControl>
			<ContentControl Content="{Binding MainContent}">
				
			</ContentControl>
			
		</DockPanel>

		<Panel.Transitions>
			<Transitions>
				<DoubleTransition Property="Opacity" Duration="0:0:1.5" Easing="ExponentialEaseOut"/>
			</Transitions>
		</Panel.Transitions>
	</Panel>

</Window>
